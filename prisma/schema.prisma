// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // url      = env("DATABASE_URL")
  url      = "postgres://ggwplarin:3iDrbh4Y7cuRXIjo@rc1b-8y2iifx1t5kqyz20.mdb.yandexcloud.net:6432/db1?"
}

enum RepoAccess {
  public
  private
}

model Users {
  id                String     @id @default(uuid())
  username          String     @unique
  hash              String
  salt              String
  key               String     @unique
  createdAt         DateTime   @default(now())
  balance           Decimal    @default(0.0)
  storageSize       Decimal    @default(0)
  usedStorage       Decimal    @default(0)
  invoices          Invoices[]
  pinnedRepos       Repos[]    @relation("pinned_repos")
  ownRepos          Repos?     @relation("owners", fields: [ownReposId], references: [id])
  ownReposId        String?
  editRepos         Repos?     @relation("editors", fields: [editReposId], references: [id])
  editReposId       String?
  contributeRepos   Repos?     @relation("contributors", fields: [contributeReposId], references: [id])
  contributeReposId String?

  Repos Repos[] @relation("creator")
}

model Repos {
  id             String           @id @default(uuid())
  name           String
  access         RepoAccess       @default(public)
  totalSize      Decimal          @default(0)
  pinUsers       Users?           @relation("pinned_repos", fields: [pinUsersId], references: [id])
  pinUsersId     String?
  creator        Users?           @relation("creator", fields: [creatorId], references: [id])
  creatorId      String?
  owners         Users[]          @relation("owners")
  editors        Users[]          @relation("editors")
  contributors   Users[]          @relation("contributors")
  modelsVersions ModelsVersions[]
}

model Models {
  id        String @id @default(uuid())
  totalSize BigInt @default(0)
}

model ModelsVersions {
  id               String   @id @default(uuid())
  fileName         String
  originalFilename String
  size             Decimal  @default(0)
  pushedAt         DateTime @default(now())
  Repos            Repos?   @relation(fields: [reposId], references: [id])
  reposId          String?
}

model Invoices {
  id          String  @id @default(uuid())
  User        Users?  @relation(fields: [userId], references: [id])
  userId      String?
  storageSize Decimal @default(0)
  amount      Decimal @default(0)
}
